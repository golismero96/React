{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\nvar _AnimatedWithChildren2 = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar AnimatedTransform = function (_AnimatedWithChildren) {\n  (0, _inherits2.default)(AnimatedTransform, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transforms) {\n    var _this;\n    (0, _classCallCheck2.default)(this, AnimatedTransform);\n    _this = _super.call(this);\n    _this._transforms = transforms;\n    return _this;\n  }\n  (0, _createClass2.default)(AnimatedTransform, [{\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof _AnimatedNode.default) {\n            value.__makeNative(platformConfig);\n          }\n        }\n      });\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedTransform.prototype), \"__makeNative\", this).call(this, platformConfig);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._get(function (animatedNode) {\n        return animatedNode.__getValue();\n      });\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this._get(function (animatedNode) {\n        return animatedNode.__getAnimatedValue();\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      var _this2 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof _AnimatedNode.default) {\n            value.__addChild(_this2);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var _this3 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof _AnimatedNode.default) {\n            value.__removeChild(_this3);\n          }\n        }\n      });\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedTransform.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var transConfigs = [];\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof _AnimatedNode.default) {\n            transConfigs.push({\n              type: 'animated',\n              property: key,\n              nodeTag: value.__getNativeTag()\n            });\n          } else {\n            transConfigs.push({\n              type: 'static',\n              property: key,\n              value: _NativeAnimatedHelper.default.transformDataType(value)\n            });\n          }\n        }\n      });\n      _NativeAnimatedHelper.default.validateTransform(transConfigs);\n      return {\n        type: 'transform',\n        transforms: transConfigs\n      };\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(getter) {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof _AnimatedNode.default) {\n            result[key] = getter(value);\n          } else if (Array.isArray(value)) {\n            result[key] = value.map(function (element) {\n              if (element instanceof _AnimatedNode.default) {\n                return getter(element);\n              } else {\n                return element;\n              }\n            });\n          } else if (typeof value === 'object') {\n            result[key] = {};\n            for (var _ref of Object.entries(value)) {\n              var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n              var nestedKey = _ref2[0];\n              var nestedValue = _ref2[1];\n              if (nestedValue instanceof _AnimatedNode.default) {\n                result[key][nestedKey] = getter(nestedValue);\n              } else {\n                result[key][nestedKey] = nestedValue;\n              }\n            }\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }]);\n  return AnimatedTransform;\n}(_AnimatedWithChildren2.default);\nexports.default = AnimatedTransform;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_NativeAnimatedHelper","_AnimatedNode","_AnimatedWithChildren2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AnimatedTransform","_AnimatedWithChildren","_super","transforms","_this","_transforms","key","__makeNative","platformConfig","forEach","transform","AnimatedNode","__getValue","_get","animatedNode","__getAnimatedValue","__attach","_this2","__addChild","__detach","_this3","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","NativeAnimatedHelper","transformDataType","validateTransform","getter","map","Array","isArray","element","_ref","entries","_ref2","nestedKey","nestedValue","AnimatedWithChildren"],"sources":["E:/Projects/learning/training_course/ReactNative/MyTestApp/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getValue());\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getAnimatedValue());\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n\n  _get(getter: AnimatedNode => any): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result: {[string]: any} = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = getter(value);\n        } else if (Array.isArray(value)) {\n          result[key] = value.map(element => {\n            if (element instanceof AnimatedNode) {\n              return getter(element);\n            } else {\n              return element;\n            }\n          });\n        } else if (typeof value === 'object') {\n          result[key] = {};\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\n            if (nestedValue instanceof AnimatedNode) {\n              result[key][nestedKey] = getter(nestedValue);\n            } else {\n              result[key][nestedKey] = nestedValue;\n            }\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}