{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.getCollapseMessage = getCollapseMessage;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _View = _interopRequireDefault(require(\"../../Components/View/View\"));\nvar _openFileInEditor = _interopRequireDefault(require(\"../../Core/Devtools/openFileInEditor\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../../StyleSheet/StyleSheet\"));\nvar _Text = _interopRequireDefault(require(\"../../Text/Text\"));\nvar _LogBoxButton = _interopRequireDefault(require(\"./LogBoxButton\"));\nvar _LogBoxInspectorSection = _interopRequireDefault(require(\"./LogBoxInspectorSection\"));\nvar _LogBoxInspectorSourceMapStatus = _interopRequireDefault(require(\"./LogBoxInspectorSourceMapStatus\"));\nvar _LogBoxInspectorStackFrame = _interopRequireDefault(require(\"./LogBoxInspectorStackFrame\"));\nvar LogBoxStyle = _interopRequireWildcard(require(\"./LogBoxStyle\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"E:\\\\Projects\\\\learning\\\\training_course\\\\ReactNative\\\\MyTestApp\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\UI\\\\LogBoxInspectorStackFrames.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction getCollapseMessage(stackFrames, collapsed) {\n  if (stackFrames.length === 0) {\n    return 'No frames to show';\n  }\n  var collapsedCount = stackFrames.reduce(function (count, _ref) {\n    var collapse = _ref.collapse;\n    if (collapse === true) {\n      return count + 1;\n    }\n    return count;\n  }, 0);\n  if (collapsedCount === 0) {\n    return 'Showing all frames';\n  }\n  var framePlural = \"frame\" + (collapsedCount > 1 ? 's' : '');\n  if (collapsedCount === stackFrames.length) {\n    return collapsed ? \"See\" + (collapsedCount > 1 ? ' all ' : ' ') + collapsedCount + \" collapsed \" + framePlural : \"Collapse\" + (collapsedCount > 1 ? ' all ' : ' ') + collapsedCount + \" \" + framePlural;\n  } else {\n    return collapsed ? \"See \" + collapsedCount + \" more \" + framePlural : \"Collapse \" + collapsedCount + \" \" + framePlural;\n  }\n}\nfunction LogBoxInspectorStackFrames(props) {\n  var _React$useState = React.useState(function () {\n      return props.log.getAvailableStack().some(function (_ref2) {\n        var collapse = _ref2.collapse;\n        return !collapse;\n      });\n    }),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    collapsed = _React$useState2[0],\n    setCollapsed = _React$useState2[1];\n  function getStackList() {\n    if (collapsed === true) {\n      return props.log.getAvailableStack().filter(function (_ref3) {\n        var collapse = _ref3.collapse;\n        return !collapse;\n      });\n    } else {\n      return props.log.getAvailableStack();\n    }\n  }\n  if (props.log.getAvailableStack().length === 0) {\n    return null;\n  }\n  return (0, _jsxRuntime.jsxs)(_LogBoxInspectorSection.default, {\n    heading: \"Call Stack\",\n    action: (0, _jsxRuntime.jsx)(_LogBoxInspectorSourceMapStatus.default, {\n      onPress: props.log.symbolicated.status === 'FAILED' ? props.onRetry : null,\n      status: props.log.symbolicated.status\n    }),\n    children: [props.log.symbolicated.status !== 'COMPLETE' && (0, _jsxRuntime.jsx)(_View.default, {\n      style: stackStyles.hintBox,\n      children: (0, _jsxRuntime.jsx)(_Text.default, {\n        style: stackStyles.hintText,\n        children: \"This call stack is not symbolicated. Some features are unavailable such as viewing the function name or tapping to open files.\"\n      })\n    }), (0, _jsxRuntime.jsx)(StackFrameList, {\n      list: getStackList(),\n      status: props.log.symbolicated.status\n    }), (0, _jsxRuntime.jsx)(StackFrameFooter, {\n      onPress: function onPress() {\n        return setCollapsed(!collapsed);\n      },\n      message: getCollapseMessage(props.log.getAvailableStack(), collapsed)\n    })]\n  });\n}\nfunction StackFrameList(props) {\n  var _this = this;\n  return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n    children: props.list.map(function (frame, index) {\n      var file = frame.file,\n        lineNumber = frame.lineNumber;\n      return (0, _jsxRuntime.jsx)(_LogBoxInspectorStackFrame.default, {\n        frame: frame,\n        onPress: props.status === 'COMPLETE' && file != null && lineNumber != null ? function () {\n          return (0, _openFileInEditor.default)(file, lineNumber);\n        } : null\n      }, index);\n    })\n  });\n}\nfunction StackFrameFooter(props) {\n  return (0, _jsxRuntime.jsx)(_View.default, {\n    style: stackStyles.collapseContainer,\n    children: (0, _jsxRuntime.jsx)(_LogBoxButton.default, {\n      backgroundColor: {\n        default: 'transparent',\n        pressed: LogBoxStyle.getBackgroundColor(1)\n      },\n      onPress: props.onPress,\n      style: stackStyles.collapseButton,\n      children: (0, _jsxRuntime.jsx)(_Text.default, {\n        style: stackStyles.collapse,\n        children: props.message\n      })\n    })\n  });\n}\nvar stackStyles = _StyleSheet.default.create({\n  section: {\n    marginTop: 15\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginBottom: 10\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 20,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  body: {\n    paddingBottom: 10\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '500',\n    paddingHorizontal: 27\n  },\n  hintText: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 13,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    marginHorizontal: 10\n  },\n  hintBox: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginHorizontal: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row'\n  },\n  collapseButton: {\n    borderRadius: 5\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  }\n});\nvar _default = LogBoxInspectorStackFrames;\nexports.default = _default;","map":{"version":3,"names":["_View","_interopRequireDefault","require","_openFileInEditor","_StyleSheet","_Text","_LogBoxButton","_LogBoxInspectorSection","_LogBoxInspectorSourceMapStatus","_LogBoxInspectorStackFrame","LogBoxStyle","_interopRequireWildcard","React","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getCollapseMessage","stackFrames","collapsed","length","collapsedCount","reduce","count","_ref","collapse","framePlural","LogBoxInspectorStackFrames","props","_React$useState","useState","log","getAvailableStack","some","_ref2","_React$useState2","_slicedToArray2","setCollapsed","getStackList","filter","_ref3","jsxs","heading","action","jsx","onPress","symbolicated","status","onRetry","children","style","stackStyles","hintBox","hintText","StackFrameList","list","StackFrameFooter","message","_this","Fragment","map","frame","index","file","lineNumber","openFileInEditor","collapseContainer","backgroundColor","pressed","getBackgroundColor","collapseButton","StyleSheet","create","section","marginTop","alignItems","flexDirection","paddingHorizontal","marginBottom","headingText","color","getTextColor","flex","fontSize","fontWeight","includeFontPadding","lineHeight","body","paddingBottom","bodyText","marginHorizontal","paddingVertical","borderRadius","marginLeft","_default","exports"],"sources":["E:/Projects/learning/training_course/ReactNative/MyTestApp/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrames.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\nimport type LogBoxLog from '../Data/LogBoxLog';\nimport type {Stack} from '../Data/LogBoxSymbolication';\n\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport LogBoxInspectorSourceMapStatus from './LogBoxInspectorSourceMapStatus';\nimport LogBoxInspectorStackFrame from './LogBoxInspectorStackFrame';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n  onRetry: () => void,\n|}>;\n\nexport function getCollapseMessage(\n  stackFrames: Stack,\n  collapsed: boolean,\n): string {\n  if (stackFrames.length === 0) {\n    return 'No frames to show';\n  }\n\n  const collapsedCount = stackFrames.reduce((count, {collapse}) => {\n    if (collapse === true) {\n      return count + 1;\n    }\n\n    return count;\n  }, 0);\n\n  if (collapsedCount === 0) {\n    return 'Showing all frames';\n  }\n\n  const framePlural = `frame${collapsedCount > 1 ? 's' : ''}`;\n  if (collapsedCount === stackFrames.length) {\n    return collapsed\n      ? `See${\n          collapsedCount > 1 ? ' all ' : ' '\n        }${collapsedCount} collapsed ${framePlural}`\n      : `Collapse${\n          collapsedCount > 1 ? ' all ' : ' '\n        }${collapsedCount} ${framePlural}`;\n  } else {\n    return collapsed\n      ? `See ${collapsedCount} more ${framePlural}`\n      : `Collapse ${collapsedCount} ${framePlural}`;\n  }\n}\n\nfunction LogBoxInspectorStackFrames(props: Props): React.Node {\n  const [collapsed, setCollapsed] = React.useState(() => {\n    // Only collapse frames initially if some frames are not collapsed.\n    return props.log.getAvailableStack().some(({collapse}) => !collapse);\n  });\n\n  function getStackList() {\n    if (collapsed === true) {\n      return props.log.getAvailableStack().filter(({collapse}) => !collapse);\n    } else {\n      return props.log.getAvailableStack();\n    }\n  }\n\n  if (props.log.getAvailableStack().length === 0) {\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection\n      heading=\"Call Stack\"\n      action={\n        <LogBoxInspectorSourceMapStatus\n          onPress={\n            props.log.symbolicated.status === 'FAILED' ? props.onRetry : null\n          }\n          status={props.log.symbolicated.status}\n        />\n      }>\n      {props.log.symbolicated.status !== 'COMPLETE' && (\n        <View style={stackStyles.hintBox}>\n          <Text style={stackStyles.hintText}>\n            This call stack is not symbolicated. Some features are unavailable\n            such as viewing the function name or tapping to open files.\n          </Text>\n        </View>\n      )}\n      <StackFrameList\n        list={getStackList()}\n        status={props.log.symbolicated.status}\n      />\n      <StackFrameFooter\n        onPress={() => setCollapsed(!collapsed)}\n        message={getCollapseMessage(props.log.getAvailableStack(), collapsed)}\n      />\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction StackFrameList(props: {\n  list: Stack | Array<StackFrame>,\n  status: string | 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING',\n}) {\n  return (\n    <>\n      {props.list.map((frame, index) => {\n        const {file, lineNumber} = frame;\n        return (\n          <LogBoxInspectorStackFrame\n            key={index}\n            frame={frame}\n            onPress={\n              props.status === 'COMPLETE' && file != null && lineNumber != null\n                ? () => openFileInEditor(file, lineNumber)\n                : null\n            }\n          />\n        );\n      })}\n    </>\n  );\n}\n\nfunction StackFrameFooter(\n  props: $TEMPORARY$object<{message: string, onPress: () => void}>,\n) {\n  return (\n    <View style={stackStyles.collapseContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundColor(1),\n        }}\n        onPress={props.onPress}\n        style={stackStyles.collapseButton}>\n        <Text style={stackStyles.collapse}>{props.message}</Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst stackStyles = StyleSheet.create({\n  section: {\n    marginTop: 15,\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginBottom: 10,\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 20,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  body: {\n    paddingBottom: 10,\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '500',\n    paddingHorizontal: 27,\n  },\n  hintText: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 13,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    marginHorizontal: 10,\n  },\n  hintBox: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginHorizontal: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row',\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n});\n\nexport default LogBoxInspectorStackFrames;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}