{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _Blob = _interopRequireDefault(require(\"../Blob/Blob\"));\nvar _BlobManager = _interopRequireDefault(require(\"../Blob/BlobManager\"));\nvar _NativeEventEmitter = _interopRequireDefault(require(\"../EventEmitter/NativeEventEmitter\"));\nvar _binaryToBase = _interopRequireDefault(require(\"../Utilities/binaryToBase64\"));\nvar _Platform = _interopRequireDefault(require(\"../Utilities/Platform\"));\nvar _NativeWebSocketModule = _interopRequireDefault(require(\"./NativeWebSocketModule\"));\nvar _WebSocketEvent = _interopRequireDefault(require(\"./WebSocketEvent\"));\nvar _base64Js = _interopRequireDefault(require(\"base64-js\"));\nvar _eventTargetShim = _interopRequireDefault(require(\"event-target-shim\"));\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _excluded = [\"headers\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar CONNECTING = 0;\nvar OPEN = 1;\nvar CLOSING = 2;\nvar CLOSED = 3;\nvar CLOSE_NORMAL = 1000;\nvar CLOSE_ABNORMAL = 1006;\nvar WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\nvar nextWebSocketId = 0;\nvar WebSocket = function (_ref) {\n  (0, _inherits2.default)(WebSocket, _ref);\n  var _super = _createSuper(WebSocket);\n  function WebSocket(url, protocols, options) {\n    var _this;\n    (0, _classCallCheck2.default)(this, WebSocket);\n    _this = _super.call(this);\n    _this.CONNECTING = CONNECTING;\n    _this.OPEN = OPEN;\n    _this.CLOSING = CLOSING;\n    _this.CLOSED = CLOSED;\n    _this.readyState = CONNECTING;\n    _this.url = url;\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n    var _ref2 = options || {},\n      _ref2$headers = _ref2.headers,\n      headers = _ref2$headers === void 0 ? {} : _ref2$headers,\n      unrecognized = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n      headers.origin = unrecognized.origin;\n      delete unrecognized.origin;\n    }\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n    }\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n    _this._eventEmitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativeWebSocketModule.default);\n    _this._socketId = nextWebSocketId++;\n    _this._registerEvents();\n    _NativeWebSocketModule.default.connect(url, protocols, {\n      headers: headers\n    }, _this._socketId);\n    return _this;\n  }\n  (0, _createClass2.default)(WebSocket, [{\n    key: \"binaryType\",\n    get: function get() {\n      return this._binaryType;\n    },\n    set: function set(binaryType) {\n      if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n        throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n      }\n      if (this._binaryType === 'blob' || binaryType === 'blob') {\n        (0, _invariant.default)(_BlobManager.default.isAvailable, 'Native module BlobModule is required for blob support');\n        if (binaryType === 'blob') {\n          _BlobManager.default.addWebSocketHandler(this._socketId);\n        } else {\n          _BlobManager.default.removeWebSocketHandler(this._socketId);\n        }\n      }\n      this._binaryType = binaryType;\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n        return;\n      }\n      this.readyState = this.CLOSING;\n      this._close(code, reason);\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n      }\n      if (data instanceof _Blob.default) {\n        (0, _invariant.default)(_BlobManager.default.isAvailable, 'Native module BlobModule is required for blob support');\n        _BlobManager.default.sendOverSocket(data, this._socketId);\n        return;\n      }\n      if (typeof data === 'string') {\n        _NativeWebSocketModule.default.send(data, this._socketId);\n        return;\n      }\n      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n        _NativeWebSocketModule.default.sendBinary((0, _binaryToBase.default)(data), this._socketId);\n        return;\n      }\n      throw new Error('Unsupported data type');\n    }\n  }, {\n    key: \"ping\",\n    value: function ping() {\n      if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n      }\n      _NativeWebSocketModule.default.ping(this._socketId);\n    }\n  }, {\n    key: \"_close\",\n    value: function _close(code, reason) {\n      var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      var closeReason = typeof reason === 'string' ? reason : '';\n      _NativeWebSocketModule.default.close(statusCode, closeReason, this._socketId);\n      if (_BlobManager.default.isAvailable && this._binaryType === 'blob') {\n        _BlobManager.default.removeWebSocketHandler(this._socketId);\n      }\n    }\n  }, {\n    key: \"_unregisterEvents\",\n    value: function _unregisterEvents() {\n      this._subscriptions.forEach(function (e) {\n        return e.remove();\n      });\n      this._subscriptions = [];\n    }\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents() {\n      var _this2 = this;\n      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        var data = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = _base64Js.default.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = _BlobManager.default.createFromOptions(ev.data);\n            break;\n        }\n        _this2.dispatchEvent(new _WebSocketEvent.default('message', {\n          data: data\n        }));\n      }), this._eventEmitter.addListener('websocketOpen', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        _this2.readyState = _this2.OPEN;\n        _this2.protocol = ev.protocol;\n        _this2.dispatchEvent(new _WebSocketEvent.default('open'));\n      }), this._eventEmitter.addListener('websocketClosed', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        _this2.readyState = _this2.CLOSED;\n        _this2.dispatchEvent(new _WebSocketEvent.default('close', {\n          code: ev.code,\n          reason: ev.reason\n        }));\n        _this2._unregisterEvents();\n        _this2.close();\n      }), this._eventEmitter.addListener('websocketFailed', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n        _this2.readyState = _this2.CLOSED;\n        _this2.dispatchEvent(new _WebSocketEvent.default('error', {\n          message: ev.message\n        }));\n        _this2.dispatchEvent(new _WebSocketEvent.default('close', {\n          code: CLOSE_ABNORMAL,\n          reason: ev.message\n        }));\n        _this2._unregisterEvents();\n        _this2.close();\n      })];\n    }\n  }]);\n  return WebSocket;\n}(_eventTargetShim.default.apply(void 0, WEBSOCKET_EVENTS));\nWebSocket.CONNECTING = CONNECTING;\nWebSocket.OPEN = OPEN;\nWebSocket.CLOSING = CLOSING;\nWebSocket.CLOSED = CLOSED;\nmodule.exports = WebSocket;","map":{"version":3,"names":["_Blob","_interopRequireDefault","require","_BlobManager","_NativeEventEmitter","_binaryToBase","_Platform","_NativeWebSocketModule","_WebSocketEvent","_base64Js","_eventTargetShim","_invariant","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","CONNECTING","OPEN","CLOSING","CLOSED","CLOSE_NORMAL","CLOSE_ABNORMAL","WEBSOCKET_EVENTS","nextWebSocketId","WebSocket","_ref","_inherits2","_super","url","protocols","options","_this","_classCallCheck2","readyState","_ref2","_ref2$headers","headers","unrecognized","_objectWithoutProperties2","origin","console","warn","Object","keys","length","join","Array","isArray","_eventEmitter","NativeEventEmitter","Platform","OS","NativeWebSocketModule","_socketId","_registerEvents","connect","_createClass2","key","get","_binaryType","set","binaryType","Error","invariant","BlobManager","isAvailable","addWebSocketHandler","removeWebSocketHandler","value","close","code","reason","_close","send","data","Blob","sendOverSocket","ArrayBuffer","isView","sendBinary","binaryToBase64","ping","statusCode","closeReason","_unregisterEvents","_subscriptions","forEach","remove","_this2","addListener","ev","id","type","base64","toByteArray","buffer","createFromOptions","dispatchEvent","WebSocketEvent","protocol","message","EventTarget","module","exports"],"sources":["E:/Projects/learning/training_course/ReactNative/MyTestApp/node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {BlobData} from '../Blob/BlobTypes';\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport Blob from '../Blob/Blob';\nimport BlobManager from '../Blob/BlobManager';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport binaryToBase64 from '../Utilities/binaryToBase64';\nimport Platform from '../Utilities/Platform';\nimport NativeWebSocketModule from './NativeWebSocketModule';\nimport WebSocketEvent from './WebSocketEvent';\nimport base64 from 'base64-js';\nimport EventTarget from 'event-target-shim';\nimport invariant from 'invariant';\n\ntype ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView;\n\ntype BinaryType = 'blob' | 'arraybuffer';\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\n// Abnormal closure where no code is provided in a control frame\n// https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\nconst CLOSE_ABNORMAL = 1006;\n\nconst WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n\nlet nextWebSocketId = 0;\n\ntype WebSocketEventDefinitions = {\n  websocketOpen: [{id: number, protocol: string}],\n  websocketClosed: [{id: number, code: number, reason: string}],\n  websocketMessage: [\n    | {type: 'binary', id: number, data: string}\n    | {type: 'text', id: number, data: string}\n    | {type: 'blob', id: number, data: BlobData},\n  ],\n  websocketFailed: [{id: number, message: string}],\n};\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends (EventTarget(...WEBSOCKET_EVENTS): any) {\n  static CONNECTING: number = CONNECTING;\n  static OPEN: number = OPEN;\n  static CLOSING: number = CLOSING;\n  static CLOSED: number = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter<WebSocketEventDefinitions>;\n  _subscriptions: Array<EventSubscription>;\n  _binaryType: ?BinaryType;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  constructor(\n    url: string,\n    protocols: ?string | ?Array<string>,\n    options: ?{headers?: {origin?: string, ...}, ...},\n  ) {\n    super();\n    this.url = url;\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    const {headers = {}, ...unrecognized} = options || {};\n\n    // Preserve deprecated backwards compatibility for the 'origin' option\n    // $FlowFixMe[prop-missing]\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn(\n        'Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.',\n      );\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      headers.origin = unrecognized.origin;\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      delete unrecognized.origin;\n    }\n\n    // Warn about and discard anything else\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn(\n        'Unrecognized WebSocket connection option(s) `' +\n          Object.keys(unrecognized).join('`, `') +\n          '`. ' +\n          'Did you mean to put these under `headers`?',\n      );\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    this._eventEmitter = new NativeEventEmitter(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeWebSocketModule,\n    );\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    NativeWebSocketModule.connect(url, protocols, {headers}, this._socketId);\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType: BinaryType): void {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n    }\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      if (binaryType === 'blob') {\n        BlobManager.addWebSocketHandler(this._socketId);\n      } else {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n    this._binaryType = binaryType;\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      BlobManager.sendOverSocket(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      NativeWebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      NativeWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    NativeWebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n    const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n    const closeReason = typeof reason === 'string' ? reason : '';\n    NativeWebSocketModule.close(statusCode, closeReason, this._socketId);\n\n    if (BlobManager.isAvailable && this._binaryType === 'blob') {\n      BlobManager.removeWebSocketHandler(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        let data: Blob | BlobData | ArrayBuffer | string = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = BlobManager.createFromOptions(ev.data);\n            break;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', {data}));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.protocol = ev.protocol;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason,\n            // TODO: missing `wasClean` (exposed on iOS as `clean` but missing on Android)\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('error', {\n            message: ev.message,\n          }),\n        );\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: CLOSE_ABNORMAL,\n            reason: ev.message,\n            // TODO: Expose `wasClean`\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}